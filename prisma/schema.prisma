generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  email            String   @unique
  passwordHash     String
  refreshTokenHash String?
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  forms            Form[]

  @@map("users")
}

enum PermissionMode {
  VIEW
  EDIT
}

model Form {
  id             Int            @id @default(autoincrement())
  publicId       String         @default(uuid()) @map("public_id")
  name           String
  description    String?
  isPublic       Boolean        @default(false) @map("is_public")
  permissionMode PermissionMode @default(VIEW) @map("permission_mode")
  ownerId        Int            @map("owner_id")
  owner          User           @relation(fields: [ownerId], references: [id])
  questions      Question[]
  styleId        Int            @unique @map("style_id")
  style          Style          @relation(fields: [styleId], references: [id])

  @@map("forms")
}

model Style {
  id                  Int      @id @default(autoincrement())
  form                Form?
  fonts               Font[]
  hexColor            String
  backgroundHexColors String[]

  @@map("styles")
}

enum FontType {
  HEADER
  QUESTION
  TEXT
}

model Font {
  id      Int      @id @default(autoincrement())
  type    FontType
  name    String
  size    Int
  styleId Int      @map("style_id")
  style   Style    @relation(fields: [styleId], references: [id])

  @@map("fonts")
}

enum QuestionType {
  TEXT
  RADIO
  CHECK
  TABLE
  IMAGE
}

model Question {
  id      Int          @id @default(autoincrement())
  type    QuestionType
  formId  Int          @map("form_id")
  form    Form         @relation(fields: [formId], references: [id])
  options Option[]

  @@map("questions")
}

model Option {
  id         Int      @id @default(autoincrement())
  value      String?
  cell       String?
  row        String?
  questionId Int      @map("question_id")
  question   Question @relation(fields: [questionId], references: [id])

  @@map("options")
}
